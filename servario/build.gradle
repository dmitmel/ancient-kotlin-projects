group = 'org.fedofcoders.servario'
version '0.0.1'

task wrapper(type: Wrapper) {
  gradleVersion = '3.1'
  distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

buildscript {
    ext.kotlinVersion = '1.1.0-beta-38'
    
    repositories {
        maven {
            url "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
        }
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.13"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

//apply plugin: 'idea'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url  "http://dl.bintray.com/kotlin/kotlin-eap-1.1"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    compile "com.google.code.gson:gson:2.8.0"
    testCompile "junit:junit:4.12"
}

task sourcesZip(type: Zip, group: 'build', description: 'Assembles a zip archive containing all sources.') {
    classifier = 'sources'
    from sourceSets['main'].allSource
}

task docsZip(type: Zip, group: 'documentation', description: 'Assemble a zip archive containing documentation.', dependsOn: dokka) {
    classifier = 'docs'
    from dokka.outputDirectory
}

dokka {
    sourceDirs = files("$projectDir/src/main/kotlin", "$projectDir/src/main/java")
}

compileKotlin.kotlinOptions {
    languageVersion = '1.0'
}

//idea {
//    module {
//        downloadSources = true
//    }
//}

tasks.withType(Zip) {     // Also will match tasks with type 'Jar'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from files("$projectDir/LICENSE")
}

artifacts {
    archives jar
    archives sourcesZip
    archives docsZip
}

sourceSets {
    main { output.resourcesDir = output.classesDir }
    test { output.resourcesDir = output.classesDir }
}

task mainClasspath {
    doFirst {
        println(sourceSets.main.runtimeClasspath.asPath)
    }
}
